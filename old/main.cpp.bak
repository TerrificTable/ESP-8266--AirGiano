#include <ESP8266WiFi.h>

#include <PubSubClient.h>

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeSans9pt7b.h>

// OLED pins
#define SDA D1
#define SCL D2

#define OLED_RESET 0     // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#ifndef STASSID
#define STASSID "AMIGO Event 2021"
#define STAPSK "HrFC4G&nwm"
#endif

const char *ssid = STASSID;
const char *password = STAPSK;
char MQTT_Server[61] = "192.168.100.75";
int MQTT_Port = 1883;
char MQTT_UID[61] = "mqtt";
char MQTT_PWD[61] = "terrific";

WiFiClient espClient;
PubSubClient MQTTClient(espClient);

void MQTTCallBack(char *Topic, byte *payload, unsigned int length)
{
    String rcv = "";

    for (int i = 0; i < length; i++)
    {
        rcv += (char)payload[i]; // convert *byte to string
    }

    Serial.println("MQTT:" + String(Topic) + " : " + rcv);

    display.clearDisplay();
    display.display();

    display.setTextColor(WHITE);
    display.setTextSize(2);
    display.setCursor(10, 0);
    display.println(rcv);
    display.display();
}

void setup()
{
    Serial.begin(115200);
    delay(100);

    Serial.print("Connect to Wifi ");

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED)
    {
        delay(1000);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("WiFi connected");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());

    display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
    display.clearDisplay();
    display.display();

    display.setTextColor(WHITE);
    display.setTextSize(2);
    display.setCursor(10, 0);
    display.println("HALLO!");
    display.display();
}

void loop()
{
    if (WiFi.status() == WL_CONNECTED)
    {
        MQTTClient.loop();

        if (!MQTTClient.connected())
        {
            String Tmp, Val;
            MQTTClient.setCallback(MQTTCallBack);

            if (!MQTTClient.connected())
            {
                MQTTClient.setServer(MQTT_Server, MQTT_Port);
                if (MQTTClient.connect(("AIRGIANO_" + String(WiFi.macAddress())).c_str(), MQTT_UID, MQTT_PWD))
                {
                    Serial.println("MQTTClient Connected");
                    Tmp = "AirGiano/#";
                    MQTTClient.subscribe(Tmp.c_str());
                }
            }
        }
    }
}
